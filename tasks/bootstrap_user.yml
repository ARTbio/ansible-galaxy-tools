---

- name: Copy the bootstrap user management script
  copy:
    src: manage_bootstrap_user.py
    dest: "{{ galaxy_server_dir }}/manage_bootstrap_user.py"
    owner: "{{ galaxy_user_name }}"

- name: Create Galaxy bootstrap user
  command: >
    chdir={{ galaxy_server_dir }} {{ galaxy_venv_dir }}/bin/python manage_bootstrap_user.py
    -c {{ galaxy_config_file }} create
    -e {{ galaxy_tools_admin_user }}
    -u {{ galaxy_tools_admin_username }}
    -p {{ galaxy_tools_admin_user_password }}
    {% if galaxy_tools_admin_user_preset_api_key|bool %}
    -a {{ galaxy_tools_api_key }}
    {% endif %}
  register: api_key
  when: (create_user is defined) and create_user

- name: put {{ galaxy_tools_admin_user }} as admin if not already present in galaxy.yml
  replace:
    backup: yes
    dest: "{{ galaxy_config_file }}"
    regexp: '^([ ]+admin_users: (?!.*{{ galaxy_tools_admin_user }}).*)$'
    replace: '\1,{{ galaxy_tools_admin_user }}'

- name: Remove the bootstrap user management script
  file:
    dest: "{{ galaxy_server_dir }}/manage_bootstrap_user.py"
    state: absent

# This needs to come last or it will short-circuit execution when the galaxy_tools_api_key fact is set
- set_fact:
    galaxy_tools_api_key: "{{ api_key.stdout_lines[0] }}"
  when: (create_user is defined) and create_user
